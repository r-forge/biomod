\name{Projection}
\alias{Projection}

\title{ Making projection with BIOMOD }
\description{
  For all the models currently implemented, BIOMOD is able to project potential distributions of
species or land-use classes for other areas, other resolutions or other time scales.
}
\usage{
Projection(Proj = NULL, Proj.name, GLM = F, GBM = F, GAM = F, CTA = F, ANN = F, SRE = F, Perc025 = F, Perc05 = F, MDA = F, MARS = F, RF = F, BinRoc = F, BinKappa = F, BinTSS = F, FiltRoc = F, FiltKappa = F, FiltTSS = F)
}

\arguments{
  \item{Proj}{ a matrix containing the same variables than for calibrating the models (using the Models function) (the column names are case-sensitive !) 
   but on another geographical space, resolution, or time scale. }
  \item{Proj.name}{ The name of your projection dataset (or any name you want to give to it) which will be used for storing the outputs of the function }
  \item{GLM}{ if TRUE, the model will be used to render projections }
  \item{GAM}{ if TRUE, the model will be used to render projections }
  \item{GBM}{ if TRUE, the model will be used to render projections }
  \item{CTA}{ if TRUE, the model will be used to render projections }
  \item{ANN}{ if TRUE, the model will be used to render projections }
  \item{SRE}{ if TRUE, the model will be used to render projections }
  \item{Perc025}{ if True, the 0.025 extreme percentiles of the response data will not be used by the SRE for calibration}
  \item{Perc05}{ if True, the 0.05 extreme percentiles of the response data will not be used by the SRE for calibration}
  \item{MDA}{ if TRUE, the model will be used to render projections }
  \item{MARS}{ if TRUE, the model will be used to render projections }
  \item{RF}{ if TRUE, the model will be used to render projections } 
  \item{BinRoc}{ set it to TRUE if you want the results to be also produced in binary using the Roc curve threshold for all models }
  \item{BinKappa}{ set it to TRUE if you want the results to be also produced in binary using Kappa threshold for all models }
  \item{BinTSS}{ set it to TRUE if you want the results to be also produced in binary using TSS threshold for all models }
  \item{FiltRoc}{ set it to TRUE if you want the results to be also produced as filtered values using the Roc curve threshold for all models }
  \item{FiltKappa}{ set it to TRUE if you want the results to be also produced as filtered value using Kappa threshold for all models }
  \item{FiltTSS}{ set it to TRUE if you want the results to be also produced as filtered value using TSS threshold for all models }
}

\Warning{
  As a general reminder, do think about reloading these objects stored in the .RData file also produced by the Models() function from one R session to another .
  They contain vital information for the models to work properly.
}

\details{
  Note that the models set to TRUE need to have been run in the Models function to be able to run with Projection(). 
  Else, they simply won't be taken into account.
}

\value{

  No values are returned but a series of objects are produced in the appropriate directory automatically generated by the function itself.
  The directory name is of the type "proj.Proj.name". If you run several projections campaign with different datasets, a directory will hence
  be produced per projection that is being run. Note that if Projection() is run with the same Proj.name argument, the results will overwright.
  
  The files are produced per species and contain the predictions in binary or filtered format with a column per model selected. See the
  structure in the examples below.

}
\references{ }
\author{ Wilfried Thuiller, Bruno Lafourcade }
\note{ }
\seealso { \code{\link{Models}},  \code{\link{ProjectionBestModel}},  \code{\link{EnsembleForecasting}},  \code{\link{ProbDensFunc}},  \code{\link{map.plot}} }
\examples{

data(Sp.Env)
Initial.State(Response=Sp.Env[,10:11], Explanatory=Sp.Env[,2:8], 
		IndependentResponse=NULL, IndependentExplanatory=NULL)

#This line will only run a few models
Models(GLM=T, TypeGLM="quad", Test="AIC", MDA=T, RF=T, GBM=F, GAM=F, CTA=F, ANN=F, SRE=F, MARS=F, NbRunEval=1, DataSplit=80,
ROC=T, Optimized.Threshold.ROC=T, Kappa=T, TSS=T)

#Render Future projections under climate change scenario
data(Future1)
Projection( Proj = Future1[,2:8], Proj.name="Future1", GLM=T, MDA=T, RF=T, BinKappa=T, FiltKappa=T)


#view the results produced, example with the projections in probabilities :
load("proj/Proj_Future1_Species2")
head(Proj_Future1_Species2)


#and plot them
data(CoorXY)
load("proj/Proj_Future1_Species2_BinKappa")
load("proj/Proj_Future1_Species2_FiltKappa")

par(mfrow=c(1,4))
level.plot(Sp.Env[,10], CoorXY, show.scale=F, title="original data")
level.plot(Proj_Future1_Species2[,"GLM"], CoorXY, show.scale=F, title="probabilities by GLM")
level.plot(Proj_Future1_Species2_BinKappa[,"GLM"], CoorXY, show.scale=F, title="binary by Kappa")
level.plot(Proj_Future1_Species2_FiltKappa[,"GLM"], CoorXY, show.scale=F, title="filtered by Kappa")


}
\keyword{ models }
\keyword{ regression }
\keyword{ nonlinear }
\keyword{ multivariate }
\keyword{ nonparametric }
\keyword{ tree }

